import pickle
import numpy as np
np.set_printoptions(threshold=np.inf)
#開啟檔案位置
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-09-53.pickle", "rb") as f1:
    data_list1 = pickle.load(f1)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-24-40.pickle", "rb") as f2:
    data_list2 = pickle.load(f2)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-25-50.pickle", "rb") as f3:
    data_list3 = pickle.load(f3)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-26-52.pickle", "rb") as f4:
    data_list4 = pickle.load(f4)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-27-14.pickle", "rb") as f5:
    data_list5 = pickle.load(f5)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-27-58.pickle", "rb") as f6:
    data_list6 = pickle.load(f6)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-28-53.pickle", "rb") as f7:
    data_list7 = pickle.load(f7)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-29-18.pickle", "rb") as f8:
    data_list8 = pickle.load(f8)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-30-16.pickle", "rb") as f9:
    data_list9 = pickle.load(f9)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-31-01.pickle", "rb") as f10:
    data_list10 = pickle.load(f10)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-31-50.pickle", "rb") as f11:
    data_list11 = pickle.load(f11)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-32-21.pickle", "rb") as f12:
    data_list12 = pickle.load(f12)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-33-27.pickle", "rb") as f13:
    data_list13 = pickle.load(f13)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-34-28.pickle", "rb") as f14:
    data_list14 = pickle.load(f14)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-35-08.pickle", "rb") as f15:
    data_list15 = pickle.load(f15)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-35-46.pickle", "rb") as f16:
    data_list16 = pickle.load(f16)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-36-34.pickle", "rb") as f17:
    data_list17 = pickle.load(f17)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-37-23.pickle", "rb") as f18:
    data_list18 = pickle.load(f18)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-38-02.pickle", "rb") as f19:
    data_list19 = pickle.load(f19)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-38-53.pickle", "rb") as f20:
    data_list20 = pickle.load(f20)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-14_16-39-21.pickle", "rb") as f21:
    data_list21 = pickle.load(f21)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-15_09-42-35.pickle", "rb") as f22:
    data_list22 = pickle.load(f22)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-15_09-43-22.pickle", "rb") as f23:
    data_list23 = pickle.load(f23)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-15_09-43-44.pickle", "rb") as f24:
    data_list24 = pickle.load(f24)
with open("C:\\Users\\User\\Desktop\\MLGame-master\\games\\arkanoid\\log\\2019-10-15_09-44-18.pickle", "rb") as f25:
    data_list25 = pickle.load(f25)




#save each info separately
Frame=[]
Status=[]
Ballposition=[]
PlatformPosition=[]
Bricks=[]
for ai in range (0 , 3):
    for i in range (0, len(data_list1)):
        Frame.append(data_list1[i].frame)
        Status.append(data_list1[i].status)
        Ballposition.append(data_list1[i].ball)
        PlatformPosition.append(data_list1[i].platform)
        Bricks.append(data_list1[i].bricks)

    for i in range (0, len(data_list2)):
        Frame.append(data_list2[i].frame)
        Status.append(data_list2[i].status)
        Ballposition.append(data_list2[i].ball)
        PlatformPosition.append(data_list2[i].platform)
        Bricks.append(data_list2[i].bricks)
    
    for i in range (0, len(data_list3)):
        Frame.append(data_list3[i].frame)
        Status.append(data_list3[i].status)
        Ballposition.append(data_list3[i].ball)
        PlatformPosition.append(data_list3[i].platform)
        Bricks.append(data_list3[i].bricks)
    
    for i in range (0, len(data_list4)):
        Frame.append(data_list4[i].frame)
        Status.append(data_list4[i].status)
        Ballposition.append(data_list4[i].ball)
        PlatformPosition.append(data_list4[i].platform)
        Bricks.append(data_list4[i].bricks)
        
    for i in range (0, len(data_list5)):
        Frame.append(data_list5[i].frame)
        Status.append(data_list5[i].status)
        Ballposition.append(data_list5[i].ball)
        PlatformPosition.append(data_list5[i].platform)
        Bricks.append(data_list5[i].bricks)
    
    for i in range (0, len(data_list6)):
        Frame.append(data_list6[i].frame)
        Status.append(data_list6[i].status)
        Ballposition.append(data_list6[i].ball)
        PlatformPosition.append(data_list6[i].platform)
        Bricks.append(data_list6[i].bricks)
    
    for i in range (0, len(data_list7)):
        Frame.append(data_list7[i].frame)
        Status.append(data_list7[i].status)
        Ballposition.append(data_list7[i].ball)
        PlatformPosition.append(data_list7[i].platform)
        Bricks.append(data_list7[i].bricks)
    
    for i in range (0, len(data_list8)):
        Frame.append(data_list8[i].frame)
        Status.append(data_list8[i].status)
        Ballposition.append(data_list8[i].ball)
        PlatformPosition.append(data_list8[i].platform)
        Bricks.append(data_list8[i].bricks)
    
    for i in range (0, len(data_list9)):
        Frame.append(data_list9[i].frame)
        Status.append(data_list9[i].status)
        Ballposition.append(data_list9[i].ball)
        PlatformPosition.append(data_list9[i].platform)
        Bricks.append(data_list9[i].bricks)
    
    for i in range (0, len(data_list10)):
        Frame.append(data_list10[i].frame)
        Status.append(data_list10[i].status)
        Ballposition.append(data_list10[i].ball)
        PlatformPosition.append(data_list10[i].platform)
        Bricks.append(data_list10[i].bricks)
    
    for i in range (0, len(data_list11)):
        Frame.append(data_list11[i].frame)
        Status.append(data_list11[i].status)
        Ballposition.append(data_list11[i].ball)
        PlatformPosition.append(data_list11[i].platform)
        Bricks.append(data_list11[i].bricks)
    
    for i in range (0, len(data_list12)):
        Frame.append(data_list12[i].frame)
        Status.append(data_list12[i].status)
        Ballposition.append(data_list12[i].ball)
        PlatformPosition.append(data_list12[i].platform)
        Bricks.append(data_list12[i].bricks)
    
    for i in range (0, len(data_list13)):
        Frame.append(data_list13[i].frame)
        Status.append(data_list13[i].status)
        Ballposition.append(data_list13[i].ball)
        PlatformPosition.append(data_list13[i].platform)
        Bricks.append(data_list13[i].bricks)
    
    for i in range (0, len(data_list14)):
        Frame.append(data_list14[i].frame)
        Status.append(data_list14[i].status)
        Ballposition.append(data_list14[i].ball)
        PlatformPosition.append(data_list14[i].platform)
        Bricks.append(data_list14[i].bricks)
    
    for i in range (0, len(data_list15)):
        Frame.append(data_list15[i].frame)
        Status.append(data_list15[i].status)
        Ballposition.append(data_list15[i].ball)
        PlatformPosition.append(data_list15[i].platform)
        Bricks.append(data_list15[i].bricks)
    
    for i in range (0, len(data_list16)):
        Frame.append(data_list16[i].frame)
        Status.append(data_list16[i].status)
        Ballposition.append(data_list16[i].ball)
        PlatformPosition.append(data_list16[i].platform)
        Bricks.append(data_list16[i].bricks)
    
    for i in range (0, len(data_list17)):
        Frame.append(data_list17[i].frame)
        Status.append(data_list17[i].status)
        Ballposition.append(data_list17[i].ball)
        PlatformPosition.append(data_list17[i].platform)
        Bricks.append(data_list17[i].bricks)
    
    for i in range (0, len(data_list18)):
        Frame.append(data_list18[i].frame)
        Status.append(data_list18[i].status)
        Ballposition.append(data_list18[i].ball)
        PlatformPosition.append(data_list18[i].platform)
        Bricks.append(data_list18[i].bricks)
        
    for i in range (0, len(data_list19)):
        Frame.append(data_list19[i].frame)
        Status.append(data_list19[i].status)
        Ballposition.append(data_list19[i].ball)
        PlatformPosition.append(data_list19[i].platform)
        Bricks.append(data_list19[i].bricks)
    
    for i in range (0, len(data_list20)):
        Frame.append(data_list20[i].frame)
        Status.append(data_list20[i].status)
        Ballposition.append(data_list20[i].ball)
        PlatformPosition.append(data_list20[i].platform)
        Bricks.append(data_list20[i].bricks)
    
    for i in range (0, len(data_list21)):
        Frame.append(data_list21[i].frame)
        Status.append(data_list21[i].status)
        Ballposition.append(data_list21[i].ball)
        PlatformPosition.append(data_list21[i].platform)
        Bricks.append(data_list21[i].bricks)
    
    for i in range (0, len(data_list22)):
        Frame.append(data_list22[i].frame)
        Status.append(data_list22[i].status)
        Ballposition.append(data_list22[i].ball)
        PlatformPosition.append(data_list22[i].platform)
        Bricks.append(data_list22[i].bricks)
    
    for i in range (0, len(data_list23)):
        Frame.append(data_list23[i].frame)
        Status.append(data_list23[i].status)
        Ballposition.append(data_list23[i].ball)
        PlatformPosition.append(data_list23[i].platform)
        Bricks.append(data_list23[i].bricks)
    
    for i in range (0, len(data_list24)):
        Frame.append(data_list24[i].frame)
        Status.append(data_list24[i].status)
        Ballposition.append(data_list24[i].ball)
        PlatformPosition.append(data_list24[i].platform)
        Bricks.append(data_list24[i].bricks)
    
    for i in range (0, len(data_list25)):
        Frame.append(data_list25[i].frame)
        Status.append(data_list25[i].status)
        Ballposition.append(data_list25[i].ball)
        PlatformPosition.append(data_list25[i].platform)
        Bricks.append(data_list25[i].bricks)
        
import  numpy as np
PlatX = np.array(PlatformPosition)[:,0][:, np.newaxis]
PlatX_next = PlatX[1:,:]
PlatY = np.array(PlatformPosition)[:,0][:, np.newaxis]

instruct = (PlatX_next - PlatX[0:len(PlatX_next), 0][:, np.newaxis])/5

BallX = np.array(Ballposition)[:,0][:, np.newaxis]
BallX_next = BallX[1:,:]
VX = (BallX_next - BallX[0:len(BallX_next), 0][:, np.newaxis])

BallY = np.array(Ballposition)[:,1][:,np.newaxis]
BallY_next = BallY[1:,:]
VY = (BallY_next - BallY[0:len(BallY_next), 0][:, np.newaxis])

Ballarray=np.array(Ballposition[:-1])
x=np.hstack((Ballarray, PlatX[0:-1,0][:,np.newaxis],VX,VY))
y = instruct 

from sklearn.model_selection import train_test_split 
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=34)

#___________________________
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score
knn = KNeighborsClassifier(n_neighbors=5)

knn.fit(x_train, y_train)

yknn_bef_scaler = knn.predict(x_test)
acc_knn_bef_scaler = accuracy_score(yknn_bef_scaler, y_test)


#_____________________________________
filename = "C:\\Users\\User\\Desktop\\MLGame-master\\knn_example.sav"
pickle.dump(knn, open(filename, 'wb'))
